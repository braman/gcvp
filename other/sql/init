INSERT INTO q_group VALUES ('main', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO q_group VALUES ('atf', NULL, '<script>	var _kk = {};	var _ru = {};	var dashboard = null;	var announcer = null;	function _init(msg){		location.hash = "#!dashboard";		jQuery("#connectionStatus").text("");		jQuery("title").text("Dashboard");		setTimeout(function(){			jQuery("#navBar").hide();			dashboard = document.getElementById("dashboard");			announcer = document.getElementById("announcer");			jQuery("#flashPanel").removeClass("hidden");			dashboard.setTitle(_group);			if(msg.tokens){				jQuery(msg.tokens).each(function(ix){					var t = msg.tokens[ix];					dashboard.push({ticket:[t.ticket,t.window],color:t.color});					});			}		},5000);	}	function _onMessage(text){		var msg = {};		try{			msg = JSON.parse(text);		}catch(e){			console.warn("Dashboard got non-JSON message:"+text);			return;		}		console.log(msg);		if(msg.ticket && msg.called){			dashboard.push({ticket:[msg.ticket,msg.window],color:msg.color});		}	}	function _onStatus(status){		console.log("_onStatus:"+ruStatuses[status]);		if(status=="DISCONNECTED"){			jQuery("#connectionStatus").text(ruStatuses[status]);			jQuery("#connectionStatus").css("color","red");		}	}</script><style>	body {		background:#202020 url(img/dashboard/pattern.gif);		overflow:hidden;		margin:0;		padding:0;	}	.body { padding-top:30px;}</style><div id="flashPanel" class="hidden" style="height: 100%;">	<embed allowscriptaccess="always" src="../swf/dashboard.swf"		width="100%" height="100%"		flashvars="color=00ff00&amp;fmt=####&amp;animated=false"		id="dashboard" name="dashboard" type="application/x-shockwave-flash" />	<embed allowscriptaccess="always" src="../swf/speecher_multilang.swf"		width="0" height="0" id="announcer" name="announcer"		type="application/x-shockwave-flash" /></div>', NULL, '<div class="body">	<div class="panel"		style="background: url(img/kiosk/atf_logo.jpeg) no-repeat 60px 8px #f2f2f2; width: 600px; margin: auto auto; text-align: center;"">		<div id="select_service" class="scene-show">			<div id="iinFake" onclick="nextScene(''numpad'');"></div>			<div style="z-index: 100;">				<div class="menu buttons group" id="lanes"></div>				<div class="horizontal-menu buttons group" id="printBtn">					<div id="kkButton" class="button" onclick="printTicket(''kk'');"						style="width: 45%;">Распечатать(каз)</div>					<div id="ruButton" class="button" onclick="printTicket(''ru'');"						style="width: 45%;">Распечатать(рус)</div>				</div>				<div class="horizontal-menu buttons group" id="backBtn" style="display:none;">					<div class="button" onclick="mainMenu()"						style="width: 90%;">На главное меню</div>				</div>			</div>			<div id="numpad" style="display: none;">				<div class="horizontal-menu numpad buttons" style="width: 380px;">					<row>					<div class="button digit">1</div>					<div class="button digit">2</div>					<div class="button digit">3</div>					</row>					<row>					<div class="button digit">4</div>					<div class="button digit">5</div>					<div class="button digit">6</div>					</row>					<row>					<div class="button digit">7</div>					<div class="button digit">8</div>					<div class="button digit">9</div>					</row>					<row>					<div class="button" onclick="removeDigit()">&lt;</div>					<div class="button digit">0</div>					<div class="button" onclick="clearDigits()">CLR</div>					</row>				</div>				<div class="menu buttons iconic group" style="width: 380px;">					<div class="button" onclick="nextScene(''lanes'');">OK</div>				</div>			</div>		</div>	</div></div><div class="print">	<img src="img/kiosk/icon_tson_print.png"		style="width: 100px; margin: 10px 0px 10px 80px;" />	<h2>		<b><span id="groupShortName"></span></b> <span id="groupLongName"></span>	</h2>	<h3 id="ticketCode" style="margin-top:45px;height:90px;"></h3>	<ul>		<li><b id="clientIdMessage"></b> <span id="clientId"></span></li>		<li><b id="ticketCreateDateMessage"></b> <span id="ticketCreateDate"></span></li>		<li><b id="laneTypesMessage"></b> <span id="laneTypes"></span></li>	</ul></div><script>	var _kk = {};	var _ru = {};	var currentScene = "lanes";	var iinFake;	var laneTypes = new Array();		var lanes = "";	var kkButton;	var ruButton;	var _lanes = null;	var _laneTree = null;	var _group = {};		function _init(data){		jQuery("head").append(jQuery("<link rel=''stylesheet'' href=''css/kiosk.css'' type=''text/css''/>"));		if(data.logo){			jQuery(".panel").attr("style","background: url("+data.logo+") no-repeat 60px 8px #f2f2f2; width: 600px; margin: auto auto; text-align: center;")		}		if(data.lanes){			_lanes = data.lanes;		}		if(data.group){			_group = data.group;		}		jQuery("#navBar").hide();		location.hash = "#!kiosk";		iinFake = jQuery("#iinFake");		kkButton = jQuery("#kkButton");			ruButton = jQuery("#ruButton");						if(data.tree){			var str = data.laneTree.replace(/&(lt|gt|quot|apos);/g, function (m, p) { 			    return (p == ''lt'')? ''<'' : (p == ''gt'') ? ''>'' : (p == ''apos'' ? "''" : ''"'');			});			data.tree = JSON.parse(str);			_laneTree = data.tree;			mainMenu();		}else{			jQuery(_lanes).each(function(ix){				var el = _lanes[ix];				jQuery("#lanes").append("<div id=''"+el.id+"'' class=''laneType button'' onclick=\"toggleLaneType(''"+el.id+"'')\">"+el.ru+"</div>");			});		}				jQuery(".digit").click(function() {			addDigit(jQuery(this).text());		});		jQuery(document).keyup(function(e){			if(e.which >= 48 && e.which <= 57){				addDigit(e.which-48);			}else if(e.which >=65 && e.which<=90){				addDigit(String.fromCharCode(e.which));			}else if(e.which == 8 || e.which == 46){				clearDigits();			}else if(e.which == 27){				clearAll();			}			return false;		});		onConnect();	}	function mainMenu(){		jQuery("#lanes div").remove();		jQuery(_laneTree).each(function(ix){			var el = _laneTree[ix];			jQuery("#lanes").append("<div class=''mainLane button'' data-id=''"+el.id+"''>"+el.ru+"</div>");		});		jQuery("#backBtn").hide();		jQuery("#printBtn").hide();		jQuery(".mainLane").click(function(){			var laneArr = getMainLane(jQuery(this).attr("data-id")).lanes;			jQuery("#lanes div").remove();			jQuery(laneArr).each(function(ix){				var lane = getLane(laneArr[ix]);				jQuery("#lanes").append("<div id=''"+lane.id+"'' class=''laneType button'' onclick=\"toggleLaneType(''"+lane.id+"'')\">"+lane.ru+"</div>");				});			jQuery("#backBtn").show();			jQuery("#printBtn").show();		});		clearAll();	}	function getMainLane(uuid){		var result = null;		jQuery(_laneTree).each(function(ix){			var el = _laneTree[ix];			if(el.id==uuid){				result = el;			}		});		return result;			}	function getLane(lane){		var result = null;		jQuery(_lanes).each(function(ix){			var el = _lanes[ix];			if(el.id==lane){				result = el;			}		});		return result;	}	function bot(){		_bot = true;		setInterval(function(){			var r = parseInt(Math.random()*1000000);			var laneArr = new Array();			var btns = jQuery("#lanes div");			if(r>500000){				btns[0].click();				if(r>800000){					btns[1].click();				}				if(r>900000){					btns[2].click();				}			}else{				btns[1].click();				if(r<200000){					btns[0].click();				}				if(r<100000){					btns[6].click();				}			}			if(r%3==0){				btns[2].click();			}			if(r%4==0){				btns[3].click();			}			if(r%5==0){				btns[4].click();			}			if(r%7==0){				btns[5].click();			}			iinFake.text(r);			ruButton.click();		},2500);	}	function _onMessage(text){		console.log("_onMessage:"+text);		var msg = {};		try{			msg = JSON.parse(text);		}catch(e){			console.warn("Kiosk got non-JSON message:"+text);		}		console.log(msg);		if(msg.ticket){			jQuery("#groupShortName").text(_group.rushort);			jQuery("#groupLongName").text(_group.ru);			jQuery("#ticketCode").text(msg.ticket.code);			jQuery("#clientIdMessage").text("ID:");			var clientId = iinFake.text();			if(clientId.length==0){				clientId = "000000000000";			}			jQuery("#clientId").text(clientId);			jQuery("#ticketCreateDateMessage").text("Дата и время:");			var date = new Date();			jQuery("#ticketCreateDate").text(date.toJSON().split("T")[0]+" "+date.toTimeString().split(" ")[0]);			jQuery("#laneTypesMessage").text("Выбранные услуги:");			var a = "";			jQuery(msg.ticket.lanes).each(function(ix){				if(msg.ticket.lanes[ix].length>0){					a += getLane(msg.ticket.lanes[ix]).ru+",";				}			});			a = a.substr(0,a.length-1);			jQuery("#laneTypes").text(a);			printFinally();			clearAll();		}	}	function onConnect(){		setTimeout(function(){			jQuery(".panel").fadeIn("slow");			nextScene("lanes");			togglePrintButtons();		},600);		console.log(XmppClient.connection.sid);	}	function _onStatus(status){		if(status=="CONNECTED" || status=="ATTACHED"){			onConnect();		}		if(status=="DISCONNECTED"){			jQuery(".panel").fadeOut("slow");		}	}		function nextScene(name){		if(currentScene){ 			jQuery("#" + currentScene).hide();		}		jQuery("#" + name).show();		currentScene = name;	}	function addDigit(digit){		if(iinFake.text().length < 9){			iinFake.text(iinFake.text() + digit);			togglePrintButtons();		}	}		function removeDigit(){		iinFake.text(iinFake.text().substring(0,iinFake.text().length-1));	}		function clearDigits(){		iinFake.text("");	}		function printTicket(language){		if(lanes && lanes.length > 0){			enqueue(language);		} else {			return false;		}	}	function printFinally(){		if(_bot == false){			window.print();		}		clearAll();	}	function enqueue(language){		var cId = iinFake.text();		if(cId.length==0){			cId = "000000000000";		}		var arr = lanes.split(";");		var laneArr = new Array();		jQuery(arr).each(function(ix){			if(arr[ix]!="" && arr[ix].length!=0){				laneArr.push(arr[ix]);			}		});		 		var msg = {action:"enqueue",lang:language,client:cId,lanes:laneArr};		XmppClient.send("queue",JSON.stringify(msg));	}		function clearAll(){		lanes = "";		clearDigits();		clearLaneTypes();		togglePrintButtons();		nextScene(''lanes'');	}	function toggleLaneType(laneTypeName){		if(lanes.indexOf(laneTypeName+";") >= 0){			lanes = lanes.replace(laneTypeName+";", "");		} else {			lanes += laneTypeName+";";		}		clearLaneTypes();		var splittedLanes = lanes.split(";");		jQuery(splittedLanes).each(function(index){			laneTypes.push(splittedLanes[index]);			jQuery("#" + splittedLanes[index]).addClass("active");						});		togglePrintButtons();					return false;	}	function clearLaneTypes(){		mainLaneType = null;		laneTypes = new Array();		jQuery(".laneType").each(function(index) {			jQuery(this).removeClass("active");		});	}	function togglePrintButtons(){		if(!lanes || lanes.length < 1){			kkButton.addClass("disabled");			ruButton.addClass("disabled");		}else {			kkButton.removeClass("disabled");			ruButton.removeClass("disabled");		}	}</script>', '<div class="row-fluid">	<div class="row-fluid" id="lane-stats">		<table class="table table-condensed">			<thead>				<tr>					<th>Линия</th>					<th>Всего</th>					<th>Обслужено</th>					<th>Клиент не пришел</th>					<th>Перенаправленные</th>				</tr>			</thead>			<tbody>							</tbody>		</table>	</div>	<div class="row-fluid" id="unit-stats">		<table class="table table-condensed">			<thead>				<tr>					<th>Оператор</th>					<th>Окно</th>					<th width="40%">Линия</th>					<th width="10%">Время вызова</th>					<th width="10%">Время начала</th>					<th width="10%">Номер билета</th>					<th>Все линии</th>				</tr>			</thead>			<tbody>			</tbody>		</table>	</div></div><div class="row" id="missed">	</div><div class="row" id="transferred">	</div><script>	var _kk = {};	var _ru = {};	var _unitStats = {};	var _laneStats = {};	var _lanes = {};	var _msgBuffer = new Array();		function _init(){		location.href = "#!monitor";		onConnect();	}	function onConnect(){		XmppClient.send("queue","init");			}	function _onMessage(text){		console.log("_onMessage:"+text);		var msg = {};		try{			msg = JSON.parse(text); 		}catch(e){			console.warn("unit got non-JSON message:"+text);			return;		}		if(msg.laneStats){			_laneStats = msg.laneStats;			updateLaneStats();		}		if(msg.unitStats){			_unitStats = msg.unitStats;			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				var el_lanes = "";				jQuery(el.lanes).each(function(ixx){					el_lanes += "<span class=''label'' data-lane=''"+el.lanes[ixx].lane+"''>"+el.lanes[ixx].laneText+"</span>";				});								jQuery("#unit-stats tbody").append("<tr data-unit=''"+el.username+"''><td><a onclick=''showUnit(\""+el.username+"\")''>"					+el.username+"</a></td><td>"					+el.window+"</td><td data-type=''lane''>"										+(_lanes[el.lane]!=undefined?_lanes[el.lane]:"")+"</td><td data-type=''called''>"					+(el.called!=undefined?el.called:"")+"</td><td data-type=''started''>"					+(el.started!=undefined?el.started:"")+"</td><td data-type=''ticket''>"					+(el.ticketCode!=undefined?el.ticketCode:"")+"</td><td>"					+el_lanes+"</td></tr>");			});		}		if(_laneStats.length==undefined || _unitStats.length==undefined){			_msgBuffer.push(msg);			return;		}else{			if(_msgBuffer.length!=0){				jQuery(_msgBuffer).each(function(ix){					processMessage(_msgBuffer[ix]);				});				_msgBuffer = new Array();			}		}		processMessage(msg);	}	function processMessage(msg){		if(msg.called){			var unit = jQuery("tr[data-unit=''"+msg.unit+"'']");			unit.find("td[data-type=ticket]").text(msg.ticket);			unit.find("td[data-type=lane]").text(_lanes[msg.lane]);			unit.find("td[data-type=called]").text(msg.called);			jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.lane){					el.called += 1;				}			});			updateLaneStats();			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				if(el.username==msg.unit){					el.called = msg.called;				}			});		}else		if(msg.started){			var unit = jQuery("tr[data-unit=''"+msg.unit+"'']");			unit.find("td[data-type=ticket]").text(msg.ticket);			unit.find("td[data-type=lane]").text(_lanes[msg.lane]);			unit.find("td[data-type=started]").text(msg.started);						jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.lane){					el.started += 1;				}			});			updateLaneStats();			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				if(el.username==msg.unit){					el.started = msg.started;				}			});		}else		if(msg.ended){			var unit = jQuery("tr[data-unit=''"+msg.unit+"'']");			unit.find("td[data-type]").text("");						jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.lane){					el.ended += 1;				}			});			updateLaneStats();			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				if(el.username==msg.unit){					el.ended.push({ticket:msg.ticket,lane:msg.lane,call:el.called,start:el.started,end:msg.ended});					el.called = undefined;					el.started = undefined;				}			});		}else		if(msg.missed){			var unit = jQuery("tr[data-unit=''"+msg.unit+"'']");			unit.find("td[data-type]").text("");						jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.lane){					el.missed += 1;				}			});			updateLaneStats();			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				if(el.username==msg.unit){					el.missed.push({ticket:msg.ticket,lane:msg.lane,call:el.called,start:el.started,end:msg.missed});					el.called = undefined;					el.started = undefined;				}			});		}else		if(msg.transferred){			var unit = jQuery("tr[data-unit=''"+msg.unit+"'']");			unit.find("td[data-type]").text("");						jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.lane){					el.transferred += 1;				}				if(el.lane==msg.nextLane){					el.created += 1;				}			});			updateLaneStats();			jQuery(_unitStats).each(function(ix){				var el = _unitStats[ix];				if(el.username==msg.unit){					el.transferred.push({ticket:msg.ticket,lane:msg.lane,targetLane:msg.nextLane,call:el.called,start:el.started,end:msg.transferred});					el.called = undefined;					el.started = undefined;				}			});		}else		if(msg.newticket){			jQuery(_laneStats).each(function(ix){				var el = _laneStats[ix];				if(el.lane==msg.newticket.lane){					el.created += 1;				}			});			updateLaneStats();		}		console.log(msg);	}	function getUnit(login){		var result = {};		jQuery(_unitStats).each(function(ix){			if(_unitStats[ix].username==login){				result = _unitStats[ix];			}		});		return result;	}	function updateLaneStats(){		jQuery("#lane-stats tbody tr").remove();		jQuery(_laneStats).each(function(ix){			var el = _laneStats[ix];			_lanes[el.lane] = el.laneText;			jQuery("#lane-stats tbody").append("<tr data-lane=''"+el.lane+"''><td>"+el.laneText+"</td><td>"					+el.created+"</td><td>"					+el.ended+"</td><td>"					+el.missed+"</td><td>"					+el.transferred+"</td></tr>");		});	}	function showUnit(username){		jQuery(_unitStats).each(function(ix){			var el = _unitStats[ix];			if(username.indexOf(el.username)!=-1){				jQuery("#unitModal legend").text("Unit "+el.username+" stats");				jQuery("#unitModal tbody tr").remove();				jQuery(el.ended).each(function(jx){					var jel = el.ended[jx]; 					jQuery("#unitModal tbody").append("<tr><td>"+jel.lane+"</td><td>"+jel.ticket+"</td><td>"+jel.start+"</td><td>"+jel.end+"</td></tr>");					});				jQuery("#unitModal").modal("show");			}		});		return false;	}	function _onStatus(status){		if(status=="CONNECTED" || status=="ATTACHED"){			onConnect();		}		if(status=="DISCONNECTED"){			console.log("Disconnected");		}	}</script><div class="modal hide fade" id="unitModal">	<div class="modal-header">		<button type="button" class="close" data-dismiss="modal">×</button>		<h3>Unit</h3>	</div>	<div class="modal-body">		<form class="form-horizontal">			<fieldset>				<legend>Unit stats</legend>				<table>					<thead>						<th>Lane</th>						<th>Ticket</th>						<th>Start</th>						<th>End</th>					</thead>					<tbody>											</tbody>				</table>			</fieldset>		</form>	</div>	<div class="modal-footer">		<a href="#" class="btn" data-dismiss="modal">Close</a> 	</div></div>', NULL, '<style>	.digits{		margin-top:70px;		}	.digits h1{		font-size:150px;	}	.row{		text-align: center;	}	.status{		margin-top:50px;	}	.btnContainer{		margin-top:30px;	}	.btnContainer .btn{		margin-top: 5px;		height: 35px;		width: 138px;	}	.statistics{		margin-left:20px;	}</style><div class="digits row">	<h1>000</h1>			</div><div class="status row">	<h1 id="tokenStatus"></h1></div><div class="tokenId row">	</div><div class="laneType row">	<h1 id="tokenLane"></h1></div><div class="btnContainer"><div class="row-fluid">	<div class="span6">		<a id="callBtn" type="button" class="btn btn-primary btn-large">Вызвать следующего</a>	</div>	<div class="span6">		<a id="startBtn" type="button" class="btn btn-primary btn-large">Начать обслуживание</a>	</div></div><div class="row-fluid">	<div class="span6">		<a id="endBtn" type="button" class="btn btn-primary btn-large">Завершить обслуживание</a>	</div>	<div class="span6">		<a id="returnBtn" type="button" class="btn btn-primary btn-large">{{returnToQ}}</a>	</div></div><div class="row-fluid">	<div class="span6">		<a id="postponeBtn" type="button" class="btn btn-primary btn-large">{{postpone}}</a>	</div>	<div class="span6">		<div class="btn-group" id="recallBtnGroup">			<a id="recallBtn" style="width:142px;" class="btn btn-primary btn-large dropdown-toggle" data-toggle="dropdown" href="#">				{{recall}}<span class="caret"></span>			</a>			<ul class="dropdown-menu"></ul>		</div>	</div></div><div class="row-fluid">	<div class="span6">		<div class="btn-group" id="transferBtnGroup">			<a id="transferBtn" class="btn btn-primary btn-large dropdown-toggle" data-toggle="dropdown" href="#">				{{transfer}}<span class="caret"></span>			</a>			<ul class="dropdown-menu"></ul>		</div>	</div>	<div class="span6">		<a id="botBtn" type="button" class="btn btn-primary btn-large" onclick="bot(); return false;">Bot</a>			</div></div></div><div class="statistics row">	<table class="table table-condensed">		<thead>			<th>{{lane}}</th>			<th>{{totalwaiting}}</th>			<th>{{served}}</th>		</thead>		<tbody></tbody>	</table></div><script>	var _ru = {		lane:"Услуга",		totalwaiting:"Всего ожидают",		served:"Вы обслужили",		call:"Вызвать следующего",		recall:"Вызвать отложенного",		start:"Начать обслуживание",		end:"Завершить обслуживание",		postpone:"Отложить",		transfer:"Перенаправить",		returnToQ:"Вернуть в очередь",		status:"Статус",		noclient:"Клиентов нет",		waiting:"Клиент ожидает",		called:"Клиент вызван",		started:"Обслуживание",		ended:"Обслуживание завершено",		transferred:"Клиент перенаправлен",		postponed:"Клиент отложен"	};	var _kk = {		lane:"Услуга",		totalwaiting:"Всего ожидают",		served:"Вы обслужили",		call:"Вызвать следующего",		recall:"Вызвать отложенного",		start:"Начать обслуживание",		end:"Завершить обслуживание",		postpone:"Отложить",		transfer:"Перенаправить",		returnToQ:"Вернуть в очередь",		status:"Статус",		noclient:"Клиентов нет",		waiting:"Клиент ожидает",		called:"Клиент вызван",		started:"Обслуживание",		ended:"Обслуживание завершено",		transferred:"Клиент перенаправлен",		postponed:"Клиент отложен"	};	var _token = null;	var _laneStats = null;	var _initData = null;	var _msgBuffer = new Array();	var _lanes = {};	function _init(data){		location.href = "#!unit";		jQuery(".buttonContainer .caret").css("margin-left","20px");		if(data.lanes){			_lanes = data.lanes;			jQuery(_lanes).each(function(ix){				var el = _lanes[ix];				jQuery("#transferBtnGroup ul").append("<li><a href=''#'' onclick=''transfer(\""+el.id+"\")''>"+el.ru+"</a></li>");				});		}		jQuery("#transferBtnGroup ul").append("<li class=''divider''></li>");		if(data.units){			jQuery(data.units).each(function(ix){				var el = data.units[ix];				jQuery("#transferBtnGroup ul").append("<li><a href=''#'' onclick=''transfer(\""+el.unit+"\")''>"+el.unit+"</a></li>");				});		}		if(data.postponed){			jQuery(data.postponed).each(function(ix){				var el = data.postponed[ix];				jQuery("#recallBtnGroup ul").append("<li><a href=''#'' onclick=''recall(\""+el.id+"\")''>"+el.ticket+" ("+el.time+")</a></li>");				});		}		if(data.current){			_token = data.current;			jQuery(".digits h1").text(_token.ticket);			jQuery("#tokenLane").text(getLane(_token.lane).ru);			if(_token.started){				jQuery("#tokenStatus").text("{{started}}");			}else{				jQuery("#tokenStatus").text("{{called}}");			}			jQuery(".tokenId").text("Token id (for debug):"+_token.id);		}				jQuery("#callBtn").click(function(e){			if(!jQuery(this).hasClass("btn-inverse")){				XmppClient.send("queue","call");			}else{				console.log("forbidden");			}		});		jQuery("#startBtn").click(function(e){			if(!jQuery(this).hasClass("btn-inverse")){				XmppClient.send("queue","start");			}else{				console.log("forbidden");			}		});		jQuery("#postponeBtn").click(function(e){			if(!jQuery(this).hasClass("btn-inverse")){				XmppClient.send("queue","postpone");			}else{				console.log("forbidden");			}		});		jQuery("#returnBtn").click(function(e){			if(!jQuery(this).hasClass("btn-inverse")){				XmppClient.send("queue",JSON.stringify({action:"transfer",token:_token.id}));			}else{				console.log("forbidden");			}		});		jQuery("#endBtn").click(function(e){			if(!jQuery(this).hasClass("btn-inverse")){				XmppClient.send("queue","end");			}else{				console.log("forbidden");			}		});		XmppClient.send("queue",JSON.stringify({action:"statistics"}));	}	function recall(tokenId){		XmppClient.send("queue",JSON.stringify({action:"recall",token:tokenId}));		return false;	}	function getLane(lane){		var result = null;		jQuery(_lanes).each(function(ix){			if(_lanes[ix].id==lane){				result = _lanes[ix];			}		});		return result;	}	function transfer(target){		XmppClient.send("queue",JSON.stringify({action:"transfer",token:_token.id,destination:target}));		return false;	}	function toggleButtons(state){		jQuery(".buttonContainer .btn").attr("class","btn btn-primary btn-large");		if(state=="initial"){			jQuery("#endBtn,#startBtn,#transferBtn").attr("class","btn btn-inverse btn-large");		}else		if(state=="called"){			jQuery("#callBtn").addClass("btn-inverse").removeClass("btn-primary");		}else		if(state=="started"){			jQuery("#callBtn,#startBtn").addClass("btn-inverse").removeClass("btn-primary");		}else		if(state=="ended" || state=="transferred"){			toggleButtons("initial");		}	}	function _onMessage(text){		var msg = {};		try{			msg = JSON.parse(text); 		}catch(e){			console.warn("unit got non-JSON message:"+text);			return;		}		console.log(msg);		if(_laneStats){			processMessage(msg);		}else{			if(msg.stats){				_laneStats = msg.stats;				jQuery(_laneStats).each(function(ix){					var el = _laneStats[ix];					jQuery(".statistics tbody").append("<tr data-lane=''"+el.lane+"''><td>"+getLane(el.lane).ru+"</td><td>"+el.waiting+"</td><td>"+el.ended+"</td></tr>")				});				jQuery(_msgBuffer).each(function(ix){					processMessage(_msgBuffer[ix]);				});			}else{				_msgBuffer.push(msg);			}		}	}	function processMessage(msg){		if(msg.pubsub){			if(msg.newticket){				var counter = jQuery("tr[data-lane=''"+msg.newticket.lane+"''] td:eq(1)");				counter.text(parseInt(counter.text())+1);			}else			if(msg.called){				var counter = jQuery("tr[data-lane=''"+msg.lane+"''] td:eq(1)");				counter.text(parseInt(counter.text())-1);			}else			if(msg.ended && msg.unit==sessionStorage.jid.split("@")[0]){				var counter = jQuery("tr[data-lane=''"+msg.lane+"''] td:eq(2)");				counter.text(parseInt(counter.text())+1);			}else			if(msg.transferred){				var counter = jQuery("tr[data-lane=''"+msg.nextLane+"''] td:eq(1)");				counter.text(parseInt(counter.text())+1);			}		}else		if(msg.token){			_token = msg.token;			jQuery(".digits h1").text(_token.ticket);			jQuery("#tokenLane").text(getLane(_token.lane).ru);			jQuery("#tokenStatus").text(_ru[_token.status]);			jQuery(".tokenId").text("Token id (for debug):"+_token.id);						jQuery("#recallBtnGroup ul a[onclick=''recall(\""+_token.id+"\")'']").remove();			if(_token.status=="postponed"){				jQuery("#recallBtnGroup ul").append("<li><a href=''#'' onclick=''recall(\""+_token.id+"\")''>"+_token.ticket+" ("+new Date().toTimeString().split(" ")[0]+")</a></li>");			}		}else{			_token = {};			jQuery(".digits h1").text("---");			jQuery("#tokenLane").text("");			jQuery("#tokenStatus").text("Клиентов нет");		}	}	function _onStatus(status){		if(status=="DISCONNECTED"){			console.error("Disconnected");		}	}	function bot(){		jQuery("#botBtn").addClass("btn-inverse").removeClass("btn-primary");		setTimeout(function(){			var r = parseInt(Math.random()*1000);			if(_token.tokenStatus=="CALLED"){				if(r>200){					jQuery("#startBtn").click();				}else if(r<200){					jQuery("#endBtn").click();				}else{					jQuery("#returnBtn").click();				}			}else			if(_token.tokenStatus=="STARTED"){				if(r>200){					jQuery("#endBtn").click();				}else{					jQuery("#returnBtn").click();				}			}else{				jQuery("#callBtn").click();			}			setTimeout(function(){				bot();			},1000);		},2500);	}</script>', 'main', NULL);

INSERT INTO q_user VALUES ('L', 'a', '2012-08-02 17:28:47.115', NULL, NULL, 'RU', '2012-08-02 17:28:47.115', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '001', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'b', '2012-08-02 17:28:47.116', NULL, NULL, 'RU', '2012-08-02 17:28:47.116', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '101', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'c', '2012-08-02 17:28:47.116', NULL, NULL, 'RU', '2012-08-02 17:28:47.116', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '201', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'd', '2012-08-02 17:28:47.116', NULL, NULL, 'RU', '2012-08-02 17:28:47.116', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '301', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'e', '2012-08-02 17:28:47.116', NULL, NULL, 'RU', '2012-08-02 17:28:47.116', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '401', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'f', '2012-08-02 17:28:47.117', NULL, NULL, 'RU', '2012-08-02 17:28:47.117', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '501', 'atf', NULL);
INSERT INTO q_user VALUES ('L', 'g', '2012-08-02 17:28:47.117', NULL, NULL, 'RU', '2012-08-02 17:28:47.117', NULL, NULL, 'LANE', 'ENABLED', NULL, NULL, NULL, NULL, 0, NULL, NULL, '601', 'atf', NULL);
INSERT INTO q_user VALUES ('U', 'admin', '2012-08-02 17:28:47.117', NULL, NULL, 'RU', '2012-08-02 17:28:47.117', 'B525E602BA061F5987EF286457D5748A7352C1D8', '2EBDC6910EDEA7C3', 'ADMIN', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
INSERT INTO q_user VALUES ('O', 'unit1.atf', '2012-08-02 17:28:47.148', NULL, NULL, 'RU', '2012-08-02 17:28:47.148', '3018996F4C5E432ADF1FE03A81CA3B3701B9DC1C', '83BA536809ED8908', 'UNIT', 'ENABLED', NULL, NULL, '01', NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('O', 'unit2.atf', '2012-08-02 17:28:47.19', NULL, NULL, 'RU', '2012-08-02 17:28:47.19', 'A004CB0248DEEE2203E1AFBD4B53034EDDE5C2B1', '0C2E43E10F10A787', 'UNIT', 'ENABLED', NULL, NULL, '02', NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('O', 'unit3.atf', '2012-08-02 17:28:47.217', NULL, NULL, 'RU', '2012-08-02 17:28:47.217', 'C176E9885CD5B9235DB0789B0DE10890DA7829CA', '68781C2B6744C16F', 'UNIT', 'ENABLED', NULL, NULL, '03', NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('O', 'unit4.atf', '2012-08-02 17:28:47.277', NULL, NULL, 'RU', '2012-08-02 17:28:47.277', 'DC656733DB2B16D6D46BC5DC3074BBDBB0257AA5', '910238270988CC2D', 'UNIT', 'ENABLED', NULL, NULL, '04', NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('O', 'unit5.atf', '2012-08-02 17:28:47.279', NULL, NULL, 'RU', '2012-08-02 17:28:47.279', 'E6677A14E77FD6127085F6E54BDEF3BAE2629F0A', '2E183A6D8741F2BC', 'UNIT', 'ENABLED', NULL, NULL, '05', NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('U', 'atf', '2012-08-02 17:28:47.281', NULL, NULL, 'RU', '2012-08-02 17:28:47.281', '620A68B6C4E897910DEE0F5C68CF0B211E15B8DA', '95CAAFF93D1B9035', 'LOCALADMIN', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('U', 'monitor.atf', '2012-08-02 17:28:47.283', NULL, NULL, 'RU', '2012-08-02 17:28:47.283', '7FAB62DBA9C32A6DDF05B588B6B744549674C99D', '0C4F24D8B6C90BA3', 'MONITOR', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('U', 'queue', '2012-08-02 17:28:47.284', NULL, NULL, 'RU', '2012-08-02 17:28:47.284', '3FF2B17DB69650B8B4450BF794CE83880F816B03', '27CBF1025B869C56', 'ADMIN', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'main', NULL);
INSERT INTO q_user VALUES ('U', 'kiosk.atf', '2012-08-02 17:28:47.286', NULL, NULL, 'RU', '2012-08-02 17:28:47.286', 'D297A1D7DC36760097155BF508A5BFDF816022C9', 'A5683628793B2E4A', 'KIOSK', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'atf', NULL);
INSERT INTO q_user VALUES ('D', 'dash.atf', '2012-08-02 17:28:47.288', NULL, NULL, 'RU', '2012-08-02 17:28:47.288', '884FB76D1E703AE4E9B2D75BF0ABBFE5DCA252FA', 'F59E2ECC04056452', 'DASHBOARD', 'ENABLED', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'atf', NULL);


INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'd');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'c');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'f');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'e');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'g');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'b');
INSERT INTO q_dashboard_lanes VALUES ('dash.atf', 'a');

INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'd');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'c');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'f');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'e');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'g');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'b');
INSERT INTO q_unit_lanes VALUES ('unit1.atf', 'a');
INSERT INTO q_unit_lanes VALUES ('unit2.atf', 'd');
INSERT INTO q_unit_lanes VALUES ('unit2.atf', 'b');
INSERT INTO q_unit_lanes VALUES ('unit2.atf', 'a');
INSERT INTO q_unit_lanes VALUES ('unit3.atf', 'f');
INSERT INTO q_unit_lanes VALUES ('unit3.atf', 'e');
INSERT INTO q_unit_lanes VALUES ('unit3.atf', 'g');
INSERT INTO q_unit_lanes VALUES ('unit3.atf', 'a');
INSERT INTO q_unit_lanes VALUES ('unit4.atf', 'd');
INSERT INTO q_unit_lanes VALUES ('unit4.atf', 'c');
INSERT INTO q_unit_lanes VALUES ('unit4.atf', 'e');
INSERT INTO q_unit_lanes VALUES ('unit5.atf', 'd');
INSERT INTO q_unit_lanes VALUES ('unit5.atf', 'c');
INSERT INTO q_unit_lanes VALUES ('unit5.atf', 'e');

INSERT INTO wx_bundlemessage VALUES (1, 'token.status.started', 'RU', 'Обслуживание');
INSERT INTO wx_bundlemessage VALUES (2, 'lane.a.name', 'RU', 'Документирование');
INSERT INTO wx_bundlemessage VALUES (3, 'lane.c.name', 'RU', 'Касса');
INSERT INTO wx_bundlemessage VALUES (4, 'group.atf.shortname', 'RU', 'АТФ');
INSERT INTO wx_bundlemessage VALUES (5, 'token.status.called', 'RU', 'Клиент вызван');
INSERT INTO wx_bundlemessage VALUES (6, 'token.status.transferred', 'RU', 'Клиент перенаправлен');
INSERT INTO wx_bundlemessage VALUES (7, 'lane.b.name', 'RU', 'Выдача готовых документов');
INSERT INTO wx_bundlemessage VALUES (8, 'token.status.postponed', 'RU', 'Отложен');
INSERT INTO wx_bundlemessage VALUES (9, 'group.atf.name', 'RU', 'АТФ Банк');
INSERT INTO wx_bundlemessage VALUES (10, 'lane.e.name', 'RU', 'Выдача кредитов');
INSERT INTO wx_bundlemessage VALUES (11, 'token.status.missed', 'RU', 'Клиент не пришел');
INSERT INTO wx_bundlemessage VALUES (12, 'token.status.waiting', 'RU', 'Клиент ожидает');
INSERT INTO wx_bundlemessage VALUES (13, 'lane.d.name', 'RU', 'Операционный зал');
INSERT INTO wx_bundlemessage VALUES (14, 'token.status.ended', 'RU', 'Обслуживание завершено');
INSERT INTO wx_bundlemessage VALUES (15, 'lane.f.name', 'RU', 'Операции с карточками');
INSERT INTO wx_bundlemessage VALUES (16, 'lane.g.name', 'RU', 'Платежы');